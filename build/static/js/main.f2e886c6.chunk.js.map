{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/phonebook.js","components/Notification.js","App.js","index.js"],"names":["Filter","search","onChange","value","PersonForm","props","onSubmit","nameValue","onChangeName","numberValue","onChangeNumber","type","Persons","contactList","onClick","map","person","name","number","id","baseUrl","getAll","a","request","axios","get","then","response","data","create","newObject","post","deletePerson","delete","updatePerson","put","Notification","message","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setSearch","setMessage","messageType","setMessageType","useEffect","phoneBookService","initialPersons","catch","err","alert","successMessage","msg","setTimeout","resetForms","filter","toLowerCase","includes","e","target","preventDefault","some","window","confirm","find","p","changedPerson","returnedPerson","newContact","returnedContact","concat","newPhoneBook","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2e886c6.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({search, onChange}) => {\n  return (\n    <div>\n      filter shown with <input value={search} onChange={onChange} />\n    </div>\n  );\n};\n\nexport default Filter\n","import React from \"react\";\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.onSubmit}>\n    <div>\n      name: <input value={props.nameValue} onChange={props.onChangeName} />\n    </div>\n    <div>\n      number: <input value={props.numberValue} onChange={props.onChangeNumber} />{\" \"}\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n  );\n};\n\nexport default PersonForm\n","import React from 'react';\n\nconst Persons = ({ contactList, onClick }) => {\n  return (\n    <>\n      {contactList.map((person) => (\n        <div key={person.name}>\n          {person.name} {person.number}\n          <button onClick={() => onClick(person.id, person.name)}>\n            delete\n          </button>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default Persons;\n","import axios from 'axios';\nconst baseUrl = 'api/persons';\n\nconst getAll = async () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = async (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst deletePerson = async (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response);\n};\n\nconst updatePerson = async (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  deletePerson,\n  updatePerson,\n};\n","const Notification = ({ message, type }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className={type}>{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport phoneBookService from './services/phonebook';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [search, setSearch] = useState('');\n  const [message, setMessage] = useState(null);\n  const [messageType, setMessageType] = useState('');\n\n  useEffect(() => {\n    phoneBookService\n      .getAll()\n      .then((initialPersons) => {\n        setPersons(initialPersons);\n      })\n      .catch((err) => {\n        alert('The server is offline');\n      });\n  }, []);\n\n  const nameIsAdded = () => {\n    if (persons.some((person) => person.name === newName)) {\n      return true;\n    }\n    return false;\n  };\n\n  const successMessage = (msg) => {\n    setMessageType('success');\n    setMessage(msg);\n    setTimeout(() => {\n      setMessage(null);\n    }, 3000);\n  };\n\n  const errorMessage = (msg) => {\n    setMessageType('error');\n    setMessage(msg);\n    setTimeout(() => {\n      setMessage(null);\n    }, 3000);\n  };\n\n  const resetForms = () => {\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const addNumber = (e) => {\n    e.preventDefault();\n\n    if (nameIsAdded()) {\n      if (\n        window.confirm(\n          `${newName} is already on the phone book, replace the old number with a new one?`\n        )\n      ) {\n        const { id } = persons.find((p) => p.name === newName);\n        const changedPerson = { name: newName, number: newNumber, id };\n\n        phoneBookService\n          .updatePerson(id, changedPerson)\n          .then((returnedPerson) => {\n            setPersons(\n              persons.map((person) =>\n                person.id === id ? returnedPerson : person\n              )\n            );\n            successMessage(`Changed ${newName}`);\n          })\n          .catch((err) => {\n            errorMessage(\n              `Information of ${newName} has already been removed from the server`\n            );\n            setPersons(\n              persons.filter((person) => {\n                return person.id !== id;\n              })\n            );\n          });\n        resetForms();\n      }\n    } else {\n      const newContact = {\n        name: newName,\n        number: newNumber,\n      };\n\n      phoneBookService.create(newContact).then((returnedContact) => {\n        setPersons(persons.concat(returnedContact));\n        successMessage(`Added ${newName}`);\n        resetForms();\n      });\n      return;\n    }\n  };\n\n  const deleteNumber = (id, name) => {\n    if (window.confirm(`Delete ${name} ?`))\n      phoneBookService.deletePerson(id).then((response) => {\n        const newPhoneBook = persons.filter((person) => person.id !== id);\n        setPersons(newPhoneBook);\n      });\n  };\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  const handleSearchChange = (e) => {\n    setSearch(e.target.value.toLowerCase());\n  };\n\n  const contactList = search\n    ? persons.filter((person) => person.name.toLowerCase().includes(search))\n    : persons;\n\n  return (\n    <div>\n      <h2>Phone book</h2>\n      <Notification type={messageType} message={message} />\n      <Filter search={search} onChange={handleSearchChange} />\n\n      <h2>add a new</h2>\n      <PersonForm\n        onSubmit={addNumber}\n        nameValue={newName}\n        onChangeName={handleNameChange}\n        numberValue={newNumber}\n        onChangeNumber={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n      <Persons contactList={contactList} onClick={deleteNumber} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App.js';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}